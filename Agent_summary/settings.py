"""
Django settings for Agent_summary project.

Generated by 'django-admin startproject' using Django 5.0.9.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)u=#*1uo7m_@zkt_rz^1c&qif6forhl+y4r33z19_q_z3(g$s#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','reports.cultureholidays.com', 'localhost', 'http://localhost:5174','http://localhost:5173']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp',
    'django_plotly_dash',
    'corsheaders',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'myapp.middlewares.RestrictDomainMiddleware',
    # 'myapp.middlewares.JWTAuthenticationMiddleware',
]


CORS_ALLOWED_ORIGINS = [
    "https://insights.cultureholidays.com",
    "http://localhost:5174",
    "http://localhost:5173",
]


CSRF_TRUSTED_ORIGINS = [
    "https://insights.cultureholidays.com",  # External website sending data
  # External website sending data
    "http://127.0.0.1:8000"    # Your Django website
    'http://localhost:5173',
    'http://localhost:5174',
]


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CSRF_COOKIE_SAMESITE = 'None'
CSRF_COOKIE_SECURE = True



SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database to store sessions
SESSION_COOKIE_AGE = 18000  # Session expires seconds
SESSION_COOKIE_HTTPONLY = True  # Prevents JavaScript access to session
SESSION_SAVE_EVERY_REQUEST = False  # Don't Save session data with every request
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Session expire on browser close


X_FRAME_OPTIONS = "ALLOWALL"

SECURE_BROWSER_XSS_FILTER = False

ROOT_URLCONF = 'Agent_summary.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Agent_summary.wsgi.application'

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE':'mssql',                    # Must be "mssql"
        'NAME': config('DB_NAME'),                       # DB name "test"
        'HOST': config('DB_HOST'),  # <server>\<instance>
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'PORT': config('DB_PORT', default='1433'),            # Keep it blank
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
            'extra_params': '',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True



# https://docs.djangoproject.com/en/5.0/howto/static-files/
# Static files (CSS, JavaScript, Images)


STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ✅ Used for collectstatic

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # ✅ Your app's own static assets
]





STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django_plotly_dash.finders.DashAssetFinder',
    'django_plotly_dash.finders.DashComponentFinder',
]

# Media files (if needed)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'middleware_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'middleware_debug.log'),
        },
    },
    'loggers': {
        'middleware': {
            'handlers': ['middleware_file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
